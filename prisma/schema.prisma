generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int        @id @default(autoincrement())
  nombre              String     @db.NVarChar(50)
  usuario             String     @unique @db.NVarChar(50)
  contrasena          String     @db.NVarChar(60)
  correo              String     @unique @db.NVarChar(100)
  estado              Boolean    @default(true)
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  sesion_expira       DateTime?
  sesion_token        String?    @db.NVarChar(255)
  reset_expira        DateTime?
  reset_token         String?    @db.NVarChar(64)
  licencias           Licencia[]

  @@map("Usuario")
}

model Servicio {
  id                  Int        @id @default(autoincrement())
  precio              Decimal    @db.Decimal(10, 2)
  fecha_creacion      DateTime   @default(now())
  fecha_actualizacion DateTime   @updatedAt
  descripcion         String     @db.NVarChar(255)
  nombre              String     @db.NVarChar(100)
  tipos_archivo       String     @default(".txt") @db.NVarChar(30)
  licencias           Licencia[]

  @@map("Servicio")
}

model Licencia {
  id                  Int       @id @default(autoincrement())
  id_usuario          Int
  id_servicio         Int
  caducidad           DateTime  @db.Date
  estado              Boolean   @default(false)
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  servicio            Servicio  @relation(fields: [id_servicio], references: [id], onDelete: Cascade)
  usuario             Usuario   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  procesos            Proceso[]

  @@map("Licencia")
}

model Proceso {
  id            Int       @id @default(autoincrement())
  id_licencia   Int
  archivo_path  String    @db.NVarChar(255)
  error_mensaje String?   @db.NVarChar(500)
  estado        String    @default("APAGADO") @db.NVarChar(20)
  fecha_fin     DateTime?
  fecha_inicio  DateTime?
  resultado     String?   @db.NVarChar(Max)
  licencia      Licencia  @relation(fields: [id_licencia], references: [id], onDelete: Cascade)

  @@map("Proceso")
}
