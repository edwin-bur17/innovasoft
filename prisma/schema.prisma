generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                  Int       @id @default(autoincrement())
  nombre              String    @db.NVarChar(50)
  usuario             String    @unique @db.NVarChar(50)
  contrasena          String    @db.NVarChar(60)
  correo              String    @unique @db.NVarChar(100)
  estado              Boolean   @default(true)
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime  @updatedAt
  sesion_token        String?   @db.NVarChar(255)
  sesion_expira       DateTime?
  reset_token         String?   @db.NVarChar(64)
  reset_expira        DateTime?

  licencias Licencia[]

  @@map("Usuario")
}

model Servicio {
  id                  Int      @id @default(autoincrement())
  nombre              String   @db.NVarChar(100)
  descripcion         String   @db.NVarChar(255)
  precio              Decimal  @db.Decimal(10, 2)
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt

  licencias Licencia[]

  @@map("Servicio")
}

model Licencia {
  id                  Int      @id @default(autoincrement())
  id_usuario          Int
  id_servicio         Int
  caducidad           DateTime @db.Date
  estado              Boolean  @default(false)
  fecha_creacion      DateTime @default(now())
  fecha_actualizacion DateTime @updatedAt

  usuario  Usuario   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  servicio Servicio  @relation(fields: [id_servicio], references: [id], onDelete: Cascade)
  procesos Proceso[]

  @@map("Licencia")
}

model Proceso {
  id            Int       @id @default(autoincrement())
  id_licencia   Int
  archivo_path  String    @db.NVarChar(255)
  estado        String    @default("APAGADO") @db.NVarChar(20)
  fecha_inicio  DateTime?
  fecha_fin     DateTime?
  resultado     String?   @db.NVarChar(Max)
  error_mensaje String?   @db.NVarChar(500)

  licencia Licencia @relation(fields: [id_licencia], references: [id], onDelete: Cascade)

  @@map("Proceso")
}
